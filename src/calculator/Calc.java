/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import javax.swing.JOptionPane;
import java.math.BigDecimal;
import java.math.RoundingMode;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.swing.JTextField;

/**
 *
 * @author Jazlan
 */
public class Calc extends javax.swing.JFrame {

    double num1 = 0, num2 = 0;
    String operator = null;

    /**
     * Creates new form Calc
     */
    public Calc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        bmul = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        bsub = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        bclear = new javax.swing.JButton();
        bback = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        badd = new javax.swing.JButton();
        bequal = new javax.swing.JButton();
        bdiv = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        bdot = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        b04 = new javax.swing.JButton();
        bequal1 = new javax.swing.JButton();
        bmul1 = new javax.swing.JButton();
        b05 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        bsub1 = new javax.swing.JButton();
        b09 = new javax.swing.JButton();
        t2 = new javax.swing.JTextField();
        b03 = new javax.swing.JButton();
        bdot1 = new javax.swing.JButton();
        b07 = new javax.swing.JButton();
        b02 = new javax.swing.JButton();
        bclear1 = new javax.swing.JButton();
        bdiv1 = new javax.swing.JButton();
        b08 = new javax.swing.JButton();
        bback1 = new javax.swing.JButton();
        b00 = new javax.swing.JButton();
        b01 = new javax.swing.JButton();
        badd1 = new javax.swing.JButton();
        b06 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        b004 = new javax.swing.JButton();
        bequal2 = new javax.swing.JButton();
        bmul2 = new javax.swing.JButton();
        b005 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        bsub2 = new javax.swing.JButton();
        b009 = new javax.swing.JButton();
        t3 = new javax.swing.JTextField();
        b003 = new javax.swing.JButton();
        bdot2 = new javax.swing.JButton();
        b007 = new javax.swing.JButton();
        b002 = new javax.swing.JButton();
        bclear2 = new javax.swing.JButton();
        bdiv2 = new javax.swing.JButton();
        b008 = new javax.swing.JButton();
        bback2 = new javax.swing.JButton();
        b000 = new javax.swing.JButton();
        b001 = new javax.swing.JButton();
        badd2 = new javax.swing.JButton();
        b006 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(252, 130, 39));

        jButton1.setText("Tahun 2");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Tahun 1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Tahun 3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DSKP Kalkulator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(48, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGap(43, 43, 43)
                .addComponent(jButton3)
                .addGap(143, 143, 143))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 453));

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(200, 480));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Tahun 1");

        t1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t1.setToolTipText("");

        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        bmul.setText("x");
        bmul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmulActionPerformed(evt);
            }
        });

        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        bsub.setText("-");
        bsub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsubActionPerformed(evt);
            }
        });

        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        bclear.setText("Clear");
        bclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bclearActionPerformed(evt);
            }
        });

        bback.setText("Back");
        bback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbackActionPerformed(evt);
            }
        });

        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        badd.setText("+");
        badd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baddActionPerformed(evt);
            }
        });

        bequal.setText("=");
        bequal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bequalActionPerformed(evt);
            }
        });

        bdiv.setText("/");
        bdiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdivActionPerformed(evt);
            }
        });

        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        bdot.setText(".");
        bdot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdotActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/boboiboy.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(t1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bclear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(bequal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(badd, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bsub, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bmul, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bdiv, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(127, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdiv, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bmul, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsub, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(badd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bequal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdot, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bclear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("tab1", jPanel3);

        b04.setText("4");
        b04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b04ActionPerformed(evt);
            }
        });

        bequal1.setText("=");
        bequal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bequal1ActionPerformed(evt);
            }
        });

        bmul1.setText("x");
        bmul1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmul1ActionPerformed(evt);
            }
        });

        b05.setText("5");
        b05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b05ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Tahun 2");

        bsub1.setText("-");
        bsub1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsub1ActionPerformed(evt);
            }
        });

        b09.setText("9");
        b09.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b09ActionPerformed(evt);
            }
        });

        t2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t2.setToolTipText("");

        b03.setText("3");
        b03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b03ActionPerformed(evt);
            }
        });

        bdot1.setText(".");
        bdot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdot1ActionPerformed(evt);
            }
        });

        b07.setText("7");
        b07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b07ActionPerformed(evt);
            }
        });

        b02.setText("2");
        b02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b02ActionPerformed(evt);
            }
        });

        bclear1.setText("Clear");
        bclear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bclear1ActionPerformed(evt);
            }
        });

        bdiv1.setText("/");
        bdiv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdiv1ActionPerformed(evt);
            }
        });

        b08.setText("8");
        b08.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b08ActionPerformed(evt);
            }
        });

        bback1.setText("Back");
        bback1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bback1ActionPerformed(evt);
            }
        });

        b00.setText("0");
        b00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b00ActionPerformed(evt);
            }
        });

        b01.setText("1");
        b01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b01ActionPerformed(evt);
            }
        });

        badd1.setText("+");
        badd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                badd1ActionPerformed(evt);
            }
        });

        b06.setText("6");
        b06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b06ActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/boboiboy.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b07, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b08, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b04, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b05, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(t2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(b01, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b02, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(b00, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bdot1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bclear1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(bequal1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(badd1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(b03, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bsub1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(b06, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bmul1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(b09, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bdiv1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bback1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(127, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b08, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b07, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdiv1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b09, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b04, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b05, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bmul1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b06, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b01, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b02, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b03, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsub1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(badd1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bequal1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdot1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b00, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bclear1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bback1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel3.getAccessibleContext().setAccessibleName("bg1");

        jTabbedPane1.addTab("tab1", jPanel2);

        b004.setText("4");
        b004.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b004ActionPerformed(evt);
            }
        });

        bequal2.setText("=");
        bequal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bequal2ActionPerformed(evt);
            }
        });

        bmul2.setText("x");
        bmul2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmul2ActionPerformed(evt);
            }
        });

        b005.setText("5");
        b005.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b005ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Tahun 3");

        bsub2.setText("-");
        bsub2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsub2ActionPerformed(evt);
            }
        });

        b009.setText("9");
        b009.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b009ActionPerformed(evt);
            }
        });

        t3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t3.setToolTipText("");

        b003.setText("3");
        b003.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b003ActionPerformed(evt);
            }
        });

        bdot2.setText(".");
        bdot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdot2ActionPerformed(evt);
            }
        });

        b007.setText("7");
        b007.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b007ActionPerformed(evt);
            }
        });

        b002.setText("2");
        b002.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b002ActionPerformed(evt);
            }
        });

        bclear2.setText("Clear");
        bclear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bclear2ActionPerformed(evt);
            }
        });

        bdiv2.setText("/");
        bdiv2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdiv2ActionPerformed(evt);
            }
        });

        b008.setText("8");
        b008.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b008ActionPerformed(evt);
            }
        });

        bback2.setText("Back");
        bback2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bback2ActionPerformed(evt);
            }
        });

        b000.setText("0");
        b000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b000ActionPerformed(evt);
            }
        });

        b001.setText("1");
        b001.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b001ActionPerformed(evt);
            }
        });

        badd2.setText("+");
        badd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                badd2ActionPerformed(evt);
            }
        });

        b006.setText("6");
        b006.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b006ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/boboiboy.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(b007, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b008, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(b004, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b005, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(t3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b001, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b002, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b000, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bdot2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bclear2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(bequal2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(badd2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b003, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bsub2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b006, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bmul2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b009, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bdiv2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bback2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(127, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b008, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b007, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdiv2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b009, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b004, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b005, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bmul2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b006, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b001, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b002, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b003, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bsub2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(badd2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bequal2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bdot2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b000, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bclear2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bback2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("tab1", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, -37, 460, 490));
        jTabbedPane1.getAccessibleContext().setAccessibleName("tab2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void b006ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b006ActionPerformed

        t3.setText(t3.getText() + "6");
    }//GEN-LAST:event_b006ActionPerformed

    private void badd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badd2ActionPerformed

           String currentText = t3.getText();
    int operatorCount = countOperators(currentText);

    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    if (operatorCount < 2) {
        t3.setText(t3.getText() + "+");
    } else {
        JOptionPane.showMessageDialog(null, "Only two operators are allowed.");
    }
    

    }//GEN-LAST:event_badd2ActionPerformed

    private void b001ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b001ActionPerformed

        t3.setText(t3.getText() + "1");
    }//GEN-LAST:event_b001ActionPerformed

    private void b000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b000ActionPerformed

        t3.setText(t3.getText() + "0");
    }//GEN-LAST:event_b000ActionPerformed

    private void bback2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bback2ActionPerformed

        String str = t3.getText();

        t3.setText(str.substring(0, str.length() - 1));
    }//GEN-LAST:event_bback2ActionPerformed

    private void b008ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b008ActionPerformed

        t3.setText(t3.getText() + "8");
    }//GEN-LAST:event_b008ActionPerformed

    private void bdiv2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdiv2ActionPerformed

           String currentText = t3.getText();
            if (currentText.contains(".")) {
        JOptionPane.showMessageDialog(null, "Division with decimal numbers is not allowed in Tahun 3.");
        return;
    }
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    
     if (!operatorEntered) {
        t3.setText(t3.getText() + "/");
        operatorEntered = true; // Set the flag indicating an operator has been entered
    } else {
        JOptionPane.showMessageDialog(null, "Only one division operation can be entered.");
    }

     
            String[] parts = currentText.split("[+\\-*/]"); // Split based on operators
    if (parts.length > 0) {
        String lastNumber = parts[parts.length - 1];
        try {
            double num = Double.parseDouble(lastNumber);
            if (num > 10000) {
                JOptionPane.showMessageDialog(null, "Cannot divide numbers greater than 10000.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format.");
            return;
        }
    }
    
    }//GEN-LAST:event_bdiv2ActionPerformed

    private void bclear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bclear2ActionPerformed

       t3.setText("");
    operatorEntered = false;
    operandCount = 0;
    }//GEN-LAST:event_bclear2ActionPerformed

    private void b002ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b002ActionPerformed

        t3.setText(t3.getText() + "2");
    }//GEN-LAST:event_b002ActionPerformed

    private void b007ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b007ActionPerformed

        t3.setText(t3.getText() + "7");
    }//GEN-LAST:event_b007ActionPerformed

    private void bdot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdot2ActionPerformed

        t3.setText(t3.getText() + ".");
    }//GEN-LAST:event_bdot2ActionPerformed

    private void b003ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b003ActionPerformed

        t3.setText(t3.getText() + "3");
    }//GEN-LAST:event_b003ActionPerformed

    private void b009ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b009ActionPerformed

        t3.setText(t3.getText() + "9");
    }//GEN-LAST:event_b009ActionPerformed

    private void bsub2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsub2ActionPerformed

           String currentText = t3.getText();
    int operatorCount = countOperators(currentText);

    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    if (operatorCount < 2) {
        t3.setText(t3.getText() + "-");
    } else {
        JOptionPane.showMessageDialog(null, "Only two operators are allowed.");
    }

    }//GEN-LAST:event_bsub2ActionPerformed
private int countOperators(String text) {
    int count = 0;
    for (int i = 0; i < text.length(); i++) {
        char c = text.charAt(i);
        if (c == '+' || c == '-') {
            count++;
        }
    }
    return count;
}
    private void b005ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b005ActionPerformed

        t3.setText(t3.getText() + "5");
    }//GEN-LAST:event_b005ActionPerformed

    private void bmul2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmul2ActionPerformed

        String currentText = t3.getText();
        if (currentText.contains(".")) {
        JOptionPane.showMessageDialog(null, "Multiplication with decimal numbers is not allowed in Tahun 3.");
        return;
    }
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
        if (!operatorEntered) {
        t3.setText(t3.getText() + "*");
        operatorEntered = true; // Set the flag indicating an operator has been entered
    } else {
        JOptionPane.showMessageDialog(null, "Only one multiplication operation can be entered.");
    }
         String[] parts = currentText.split("[+\\-*/]"); // Split based on operators
        if (parts.length > 0) {
        String lastNumber = parts[parts.length - 1];
        try {
            double num = Double.parseDouble(lastNumber);
            if (num > 1000) {
                JOptionPane.showMessageDialog(null, "Cannot multiply numbers greater than 1000.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format.");
            return;
        }
    }
    }//GEN-LAST:event_bmul2ActionPerformed
private boolean handleMultiply2(JTextField textField) {
    String currentText = textField.getText();
    String[] parts = currentText.split("[+\\-*/]");

    for (String part : parts) {
        try {
            double num = Double.parseDouble(part);
            if (num > 1000) {
                JOptionPane.showMessageDialog(null, "Cannot multiply numbers greater than 1000 in Tahun 3.");
                return false;
            }
        } catch (NumberFormatException e) {
            // Handle invalid number format if necessary
        }
    }
    return true;
}
    private void bequal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bequal2ActionPerformed

    String currentText = t3.getText();

    if (currentText.contains("*") && !handleMultiply2(t3)) {
        return; // Stop further execution if multiplication check fails
    }

    if (invalidDecimalRange1(currentText)) {
        JOptionPane.showMessageDialog(null, "Decimal numbers must be between 0.01 and  0.99 in Tahun 3.");
        return;
    }

    if (currentText.contains("/")) {
        handleDivision1(t3);
    } else {
        calculateResult1(t3);
    }
    }//GEN-LAST:event_bequal2ActionPerformed
    private void handleDivision1(JTextField textField) {
    String currentText = textField.getText();
    String[] parts = currentText.split("/");
    if (parts.length == 2) {
        try {
            double firstNum = Double.parseDouble(parts[0]);
            double secondNum = Double.parseDouble(parts[1]);

            if (secondNum == 0) {
                JOptionPane.showMessageDialog(null, "Cannot divide by zero.");
                return;
            }
            if (firstNum > 10000) {
                    JOptionPane.showMessageDialog(null, "Cannot divide by numbers greater than 10000.");
                    return;
                }
            if (secondNum > 1000) {
                    JOptionPane.showMessageDialog(null, "Cannot divide by numbers greater than 10000.");
                    return;
                }

            double result = firstNum / secondNum;
            int remainder = (int)firstNum % (int)secondNum;

            textField.setText(String.format("%.2f Remainder %d", result, remainder));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Invalid division format.");
    }
}

private boolean invalidDecimalRange1(String text) {
    String[] parts = text.split("[+\\-*/]");
    for (String part : parts) {
        if (part.contains(".")) {
            double number = Double.parseDouble(part);
            if (number < 0.01 || number > 0.99) {
                return true;
            }
        }
    }
    return false;
}
private void calculateResult1(JTextField textField) {
    String expression = textField.getText();
    ScriptEngineManager mgr = new ScriptEngineManager();
    ScriptEngine engine = mgr.getEngineByName("JavaScript");

    try {
        Object result = engine.eval(expression);
        double resultNumber = new BigDecimal(String.valueOf(result)).setScale(3, RoundingMode.HALF_UP).doubleValue();
        
        if (resultNumber < 0 || resultNumber > 10000) {
            JOptionPane.showMessageDialog(null, "The answer is outside the allowed range! Please stay within the syllabus limits.");
            textField.setText("");
        } else {
            textField.setText(String.valueOf(resultNumber));
        }
    } catch (ScriptException e) {
        textField.setText("Error");
        JOptionPane.showMessageDialog(null, "Invalid expression.");
    } catch (NumberFormatException e) {
        textField.setText("Error");
        JOptionPane.showMessageDialog(null, "Error in number format.");
    }
}
    private void b004ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b004ActionPerformed

        t3.setText(t3.getText() + "4");
    }//GEN-LAST:event_b004ActionPerformed

    private void b06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b06ActionPerformed

        t2.setText(t2.getText() + "6");
    }//GEN-LAST:event_b06ActionPerformed
private boolean lastCharacterIsOperator(String text) {
    if(text.isEmpty()) return false;
    char lastChar = text.charAt(text.length() - 1);
    return lastChar == '+' || lastChar == '-' || lastChar == '*' || lastChar == '/';
}
boolean operatorEntered = false;

    private void badd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badd1ActionPerformed
 String currentText = t2.getText();
    int operatorCount = countOperators(currentText, '+');
    
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    if (operatorCount < 2 && (operatorCount == 0 || onlyContainsOperator(currentText, '+'))) {
        t2.setText(t2.getText() + "+");
    } else {
        JOptionPane.showMessageDialog(null, "Only two addition operations can be entered.");
    }
    if (currentText.contains("+") && currentText.contains("-")) {
        JOptionPane.showMessageDialog(null, "Only one type of operator is allowed."); 
    } 
        
    
    

    }//GEN-LAST:event_badd1ActionPerformed
    private int countOperators(String text, char operator) {
    int count = 0;
    for (int i = 0; i < text.length(); i++) {
        if (text.charAt(i) == operator) {
            count++;
        }
    }
    return count;
}

private boolean onlyContainsOperator(String text, char operator) {
    for (int i = 0; i < text.length(); i++) {
        char c = text.charAt(i);
        if (c == '+' || c == '-' || c == '*' || c == '/') {
            if (c != operator) {
                return false;
            }
        }
    }
    return true;
}
    private void b01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b01ActionPerformed

        t2.setText(t2.getText() + "1");
    }//GEN-LAST:event_b01ActionPerformed

    private void b00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b00ActionPerformed

        t2.setText(t2.getText() + "0");
    }//GEN-LAST:event_b00ActionPerformed

    private void bback1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bback1ActionPerformed

        String str = t2.getText();

        t2.setText(str.substring(0, str.length() - 1));
    }//GEN-LAST:event_bback1ActionPerformed

    private void b08ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b08ActionPerformed

        t2.setText(t2.getText() + "8");
    }//GEN-LAST:event_b08ActionPerformed

    private void bdiv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdiv1ActionPerformed
String currentText = t2.getText();
    if (currentText.contains(".")) {
        JOptionPane.showMessageDialog(null, "Division with decimal numbers is not allowed in Tahun 2.");
        return;
    }
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    
     if (!operatorEntered) {
        t2.setText(t2.getText() + "/");
        operatorEntered = true; // Set the flag indicating an operator has been entered
    } else {
        JOptionPane.showMessageDialog(null, "Only one division operation can be entered.");
    }
         String[] parts = currentText.split("[+\\-*/]"); // Split based on operators
    if (parts.length > 0) {
        String lastNumber = parts[parts.length - 1];
        try {
            double num = Double.parseDouble(lastNumber);
            if (num > 100) {
                JOptionPane.showMessageDialog(null, "Cannot divide numbers greater than 100.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format.");
            return;
        }
    }
     
     
    }//GEN-LAST:event_bdiv1ActionPerformed

    private void bclear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bclear1ActionPerformed
t2.setText("");
    operatorEntered = false;
    operandCount = 0;
        
    }//GEN-LAST:event_bclear1ActionPerformed

    private void b02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b02ActionPerformed

        t2.setText(t2.getText() + "2");
    }//GEN-LAST:event_b02ActionPerformed

    private void b07ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b07ActionPerformed

        t2.setText(t2.getText() + "7");
    }//GEN-LAST:event_b07ActionPerformed

    private void bdot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdot1ActionPerformed

        t2.setText(t2.getText() + ".");
    }//GEN-LAST:event_bdot1ActionPerformed

    private void b03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b03ActionPerformed

        t2.setText(t2.getText() + "3");
    }//GEN-LAST:event_b03ActionPerformed

    private void b09ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b09ActionPerformed

        t2.setText(t2.getText() + "9");
    }//GEN-LAST:event_b09ActionPerformed

    private void bsub1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsub1ActionPerformed

         String currentText = t2.getText();
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    if (!currentText.contains("+") && !currentText.contains("-") && !currentText.contains("*") && !currentText.contains("/")) {
        t2.setText(currentText + "-");
    } else {
        JOptionPane.showMessageDialog(null, "Only one type of operator is allowed.");
    }
    

    }//GEN-LAST:event_bsub1ActionPerformed

    private void b05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b05ActionPerformed

        t2.setText(t2.getText() + "5");
    }//GEN-LAST:event_b05ActionPerformed

    private void bmul1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmul1ActionPerformed
String currentText = t2.getText();
    if (currentText.contains(".")) {
        JOptionPane.showMessageDialog(null, "Multiplication with decimal numbers is not allowed in Tahun 2.");
        return;
    }
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
            if (!operatorEntered) {
        t2.setText(t2.getText() + "*");
        operatorEntered = true; // Set the flag indicating an operator has been entered
    } else {
        JOptionPane.showMessageDialog(null, "Only one multiplication operation can be entered.");
    }
            String[] parts = currentText.split("[+\\-*/]"); // Split based on operators
    if (parts.length > 0) {
        String lastNumber = parts[parts.length - 1];
        try {
            double num = Double.parseDouble(lastNumber);
            if (num > 10) {
                JOptionPane.showMessageDialog(null, "Cannot multiply numbers greater than 10.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format.");
            return;
        }
    }
    t2.setText(currentText + "*");

    }//GEN-LAST:event_bmul1ActionPerformed
    private boolean handleMultiply1(JTextField textField) {
    String currentText = textField.getText();
    String[] parts = currentText.split("[+\\-*/]");

    for (String part : parts) {
        try {
            double num = Double.parseDouble(part);
            if (num > 10) {
                JOptionPane.showMessageDialog(null, "Cannot multiply numbers greater than 10 in Tahun 2.");
                return false;
            }
        } catch (NumberFormatException e) {
            // Handle invalid number format if necessary
        }
    }
    return true;
}
    private void bequal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bequal1ActionPerformed
         String currentText = t2.getText();
 

    if (currentText.contains("*") && !handleMultiply1(t2)) {
        return; // Stop further execution if multiplication check fails
    }
    if (invalidDecimalRange(currentText)) {
        JOptionPane.showMessageDialog(null, "Decimal numbers must be between 0.1 and 0.9 in Tahun 2.");
        return;
    }

    if (currentText.contains("/")) {
        handleDivision(t2);
    } else  {
        calculateResult(t2);
    }
    }//GEN-LAST:event_bequal1ActionPerformed
    private void handleDivision(JTextField textField) {
    String currentText = textField.getText();
    String[] parts = currentText.split("/");
    if (parts.length == 2) {
        try {
            double firstNum = Double.parseDouble(parts[0]);
            double secondNum = Double.parseDouble(parts[1]);

            if (secondNum == 0) {
                JOptionPane.showMessageDialog(null, "Cannot divide by zero.");
                return;
            }
            if (secondNum > 10) {
                    JOptionPane.showMessageDialog(null, "Cannot divide by numbers greater than 10.");
                    return;
                }

            double result = firstNum / secondNum;
            int remainder = (int)firstNum % (int)secondNum;

            textField.setText(String.format("%.2f Remainder %d", result, remainder));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Invalid division format.");
    }
}

private boolean invalidDecimalRange(String text) {
    String[] parts = text.split("[+\\-*/]");
    for (String part : parts) {
        if (part.contains(".")) {
            double number = Double.parseDouble(part);
            if (number < 0.1 || number > 0.9) {
                return true;
            }
        }
    }
    return false;
}
private void calculateResult(JTextField textField) {
    String expression = textField.getText();
    ScriptEngineManager mgr = new ScriptEngineManager();
    ScriptEngine engine = mgr.getEngineByName("JavaScript");

    try {
        Object result = engine.eval(expression);
        double resultNumber = new BigDecimal(String.valueOf(result)).setScale(2, RoundingMode.HALF_UP).doubleValue();
        
        if (resultNumber < 0 || resultNumber > 1000) {
            JOptionPane.showMessageDialog(null, "The answer is outside the allowed range! Please stay within the syllabus limits.");
            textField.setText("");
        } else {
            textField.setText(String.valueOf(resultNumber));
        }
    } catch (ScriptException e) {
        textField.setText("Error");
        JOptionPane.showMessageDialog(null, "Invalid expression.");
    } catch (NumberFormatException e) {
        textField.setText("Error");
        JOptionPane.showMessageDialog(null, "Error in number format.");
    }
}
    private void b04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b04ActionPerformed

        t2.setText(t2.getText() + "4");
    }//GEN-LAST:event_b04ActionPerformed

    private void bdotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdotActionPerformed

        JOptionPane.showMessageDialog(null, "This operation is not in your syllabus. Please choose another operation !! ");
        return;  // exit
        //t1.setText(t1.getText()+".");
    }//GEN-LAST:event_bdotActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed

        t1.setText(t1.getText() + "9");
    }//GEN-LAST:event_b9ActionPerformed

    private void bdivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdivActionPerformed

        JOptionPane.showMessageDialog(null, "This operation is not in your syllabus. Please choose another operation !! ");
        return;  // exit

        /*if (operator != null) {
            JOptionPane.showMessageDialog(null, "Operator already set. Please press '=' button. ");
            return;  // exit the method if the operator is already set
        }
        
        num1 = Double.parseDouble(t1.getText());
        t1.setText("");
        operator="/";*/
    }//GEN-LAST:event_bdivActionPerformed

    private void bequalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bequalActionPerformed

        String expression = t1.getText();
    int operatorCount = countOperators1(expression);

    // Check if there is more than one operator or an invalid operator in the expression
    if (operatorCount > 1 || containsInvalidOperator(expression)) {
        JOptionPane.showMessageDialog(null, "Only one operator (addition or subtraction) is allowed.");
        return;
    }

    ScriptEngineManager mgr = new ScriptEngineManager();
    ScriptEngine engine = mgr.getEngineByName("JavaScript");

    try {
        // Evaluate the expression
        Object result = engine.eval(expression);

        // Convert result to a number and format it
        double resultNumber = new BigDecimal(String.valueOf(result)).setScale(2, RoundingMode.HALF_UP).doubleValue();

        // Check for negative results or results outside the syllabus range
        if (resultNumber < 0 || resultNumber > 100) {
            JOptionPane.showMessageDialog(null, "The answer is outside the allowed range! Please stay within the syllabus limits.");
            t1.setText(""); // Clear the text field
        } else {
            // Display the result
            t1.setText(String.valueOf(resultNumber));
        }
    } catch (ScriptException e) {
        t1.setText("Error");
        JOptionPane.showMessageDialog(null, "Invalid expression.");
    } catch (NumberFormatException e) {
        t1.setText("Error");
        JOptionPane.showMessageDialog(null, "Error in number format.");
    }
    }//GEN-LAST:event_bequalActionPerformed
    private int countOperators1(String text) {
    int count = 0;
    for (int i = 0; i < text.length(); i++) {
        char c = text.charAt(i);
        if (c == '+' || c == '-') {
            count++;
        }
    }
    return count;
}

// Helper method to check for invalid operators (other than + and -)
private boolean containsInvalidOperator(String text) {
    for (int i = 0; i < text.length(); i++) {
        char c = text.charAt(i);
        if (c == '*' || c == '/') {
            return true;
        }
    }
    return false;
}
    private void baddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baddActionPerformed

       String currentText = t1.getText();
    int operatorCount = countOperators(currentText, '+');
    
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    if (operatorCount < 1 && (operatorCount == 0 || onlyContainsOperator(currentText, '+'))) {
        t1.setText(t1.getText() + "+");
    } 
    
    if (!currentText.contains("+") && !currentText.contains("-")) {
        t1.setText(currentText + "+");
    } else {
        JOptionPane.showMessageDialog(null, "Only one type of operator is allowed.");
    }
    
    }//GEN-LAST:event_baddActionPerformed
int operandCount = 0;

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed

          t1.setText(t1.getText() + "0");
    }//GEN-LAST:event_b0ActionPerformed

    private void bbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbackActionPerformed

        String str = t1.getText();

        t1.setText(str.substring(0, str.length() - 1));
    }//GEN-LAST:event_bbackActionPerformed

    private void bclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bclearActionPerformed

       t1.setText("");
    operatorEntered = false;
    operandCount = 0;
    }//GEN-LAST:event_bclearActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed

        t1.setText(t1.getText() + "2");
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed

        t1.setText(t1.getText() + "3");
    }//GEN-LAST:event_b3ActionPerformed

    private void bsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsubActionPerformed

        String currentText = t1.getText();
    if (currentText.isEmpty() || lastCharacterIsOperator(currentText)) {
        JOptionPane.showMessageDialog(null, "Please enter a number before adding an operator.");
        return;
    }
    t1.setText(currentText + "-");
     if (!currentText.contains("+") && !currentText.contains("-")) {
        t1.setText(currentText + "-");
    } else {
        JOptionPane.showMessageDialog(null, "Only one type of operator is allowed.");
    }
    }//GEN-LAST:event_bsubActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed

        t1.setText(t1.getText() + "5");
    }//GEN-LAST:event_b5ActionPerformed

    private void bmulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmulActionPerformed

        JOptionPane.showMessageDialog(null, "This operation is not in your syllabus. Please choose another operation !! ");
        return;  // exit

        /*if (operator != null) {
            JOptionPane.showMessageDialog(null, "Operator already set. Please press '=' button. ");
            return;  // exit the method if the operator is already set
        }
        
        num1 = Double.parseDouble(t1.getText());
        t1.setText("");
        operator="*";*/
    }//GEN-LAST:event_bmulActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed

        t1.setText(t1.getText() + "4");
    }//GEN-LAST:event_b4ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed

        t1.setText(t1.getText() + "6");
    }//GEN-LAST:event_b6ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed

        t1.setText(t1.getText() + "1");
    }//GEN-LAST:event_b1ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed

        t1.setText(t1.getText() + "8");
    }//GEN-LAST:event_b8ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed

        t1.setText(t1.getText() + "7");
    }//GEN-LAST:event_b7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b0;
    private javax.swing.JButton b00;
    private javax.swing.JButton b000;
    private javax.swing.JButton b001;
    private javax.swing.JButton b002;
    private javax.swing.JButton b003;
    private javax.swing.JButton b004;
    private javax.swing.JButton b005;
    private javax.swing.JButton b006;
    private javax.swing.JButton b007;
    private javax.swing.JButton b008;
    private javax.swing.JButton b009;
    private javax.swing.JButton b01;
    private javax.swing.JButton b02;
    private javax.swing.JButton b03;
    private javax.swing.JButton b04;
    private javax.swing.JButton b05;
    private javax.swing.JButton b06;
    private javax.swing.JButton b07;
    private javax.swing.JButton b08;
    private javax.swing.JButton b09;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton badd;
    private javax.swing.JButton badd1;
    private javax.swing.JButton badd2;
    private javax.swing.JButton bback;
    private javax.swing.JButton bback1;
    private javax.swing.JButton bback2;
    private javax.swing.JButton bclear;
    private javax.swing.JButton bclear1;
    private javax.swing.JButton bclear2;
    private javax.swing.JButton bdiv;
    private javax.swing.JButton bdiv1;
    private javax.swing.JButton bdiv2;
    private javax.swing.JButton bdot;
    private javax.swing.JButton bdot1;
    private javax.swing.JButton bdot2;
    private javax.swing.JButton bequal;
    private javax.swing.JButton bequal1;
    private javax.swing.JButton bequal2;
    private javax.swing.JButton bmul;
    private javax.swing.JButton bmul1;
    private javax.swing.JButton bmul2;
    private javax.swing.JButton bsub;
    private javax.swing.JButton bsub1;
    private javax.swing.JButton bsub2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    // End of variables declaration//GEN-END:variables
}
